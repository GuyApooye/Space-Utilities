plugins {
    // Needed for Forge+Fabric
    id "architectury-plugin" version "3.4.146"
    id "dev.architectury.loom" version "1.3.355" apply false
    // Kotlin
    id "org.jetbrains.kotlin.jvm" version "1.9.10" apply false
    // Kotlin linter
//    id "org.jlleitschuh.gradle.ktlint" version "10.3.0"
    // Java linter
    id "checkstyle"

    id 'com.matthewprenger.cursegradle' version '1.4.0' apply false
    id "com.modrinth.minotaur" version "2.4.5" apply false
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
//    version = rootProject.mod_version + "git rev-parse HEAD".execute().text.trim().substring(0, 10)
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'

//    apply plugin: "org.jlleitschuh.gradle.ktlint"
    apply plugin: "checkstyle"
    apply plugin: "org.jetbrains.kotlin.jvm"

    base {
        // Set up a suffixed format for the mod jar names, e.g. `example-fabric`.
        archivesName = "$rootProject.archives_name-$project.name"
    }

    repositories {
        maven {
            name = 'Kotlin for Forge'
            url = 'https://thedarkcolour.github.io/KotlinForForge/'
        }
        maven {
            name = "Valkyrien Skies Internal"
            url = 'https://maven.valkyrienskies.org'
        }
        maven {
            name = 'ParchmentMC'
            url = 'https://maven.parchmentmc.org'
        }
        exclusiveContent {
            forRepository {
                maven {
                    name = "Modrinth"
                    url = "https://api.modrinth.com/maven"
                }
            }
            filter {
                includeGroup "maven.modrinth"
            }
        }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings(loom.layered {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-1.18.2:2022.09.04@zip")
        })

        implementation("org.joml:joml:1.10.4") { transitive = false }
        implementation("org.joml:joml-primitives:1.10.0") { transitive = false }

        api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.10"
        api "org.jetbrains.kotlin:kotlin-reflect:1.9.10"
    }

    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
    }

    // Configure Maven publishing.
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = base.archivesName.get()
                from components.java
            }
        }

        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
        repositories {
            // Add repositories to publish to here.
            // Notice: This block does NOT have the same function as the block in the top level.
            // The repositories here will be used for publishing your artifact, not for
            // retrieving dependencies.
        }
    }
}
